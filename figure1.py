import pygame
import pygame.draw as draw

# это максимальный FPS
FPS = 30
# После импорта библиотеки, необходимо её инициализировать:
pygame.init()

# И создать окно:
screen = pygame.display.set_mode((400, 400))
# Задать фон окна
screen.fill((224, 224, 224))

# здесь будут рисоваться фигуры
# ...
draw.rect(screen, (255, 0, 255), (100, 100, 200, 200))
draw.rect(screen, (0, 0, 255), (100, 100, 200, 200), 5)
draw.polygon(screen, (255, 255, 0), [(100, 100), (200, 50), (300, 100), (100, 100)])
draw.polygon(screen, (0, 0, 255), [(100, 100), (200, 50), (300, 100), (100, 100)], 5)
draw.circle(screen, (0, 255, 0), (200, 175), 50)
draw.circle(screen, (255, 255, 255), (200, 175), 50, 5)

# после чего, чтобы они отобразились на экране, экран нужно обновить:
pygame.display.update()
# Эту же команду нужно будет повторять, если на экране происходят изменения.

# Также хорошей практикой является добавление небольшой задержки в главный цикл программы,
# чтобы не заставлять ее работать "вхолостую", постоянно считывая события, которых, скорее всего, нет.
# Для этого в pygame есть специальный модуль time. До начала главного цикла создаем объект Clock:
clock = pygame.time.Clock()

# Флаг для обозначения хода программы
finished = False

# Наконец, нужно создать основной цикл, в котором будут отслеживаться
# происходящие события.
# Пока единственное событие, которое нас интересует - выход из программы.
while not finished:
    # добавление небольшой задержки в главный цикл программы,
    clock.tick(FPS)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            finished = True

pygame.quit()
